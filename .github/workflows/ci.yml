name: CI Workflows

on:
  push:
    branches:
      - develop  # o la rama en la que desees ejecutar el flujo

permissions:
  id-token: write  # Necesario para emitir el token OIDC
  contents: read   # Necesario para acceder a los contenidos del repositorio

jobs:
  tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20.16.0"

      - name: Install pnpm globally
        run: |
          npm install -g pnpm

      - name: Install dependencies
        run: |
          pnpm install

      - name: Run tests
        run: |
          pnpm run test

  semantic-release:
    runs-on: ubuntu-latest
    needs: tests
    permissions:
      contents: write
      id-token: write
      pull-requests: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20.16.0"

      - name: Install pnpm globally
        run: |
          npm install -g pnpm

      - name: Install dependencies
        run: |
          pnpm install

      - name: Azure login with OIDC
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}  # Asegúrate de haber creado este secreto en GitHub
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      # Verificar secretos (opcional, solo para depuración)
      - name: Verificar secretos
        run: |
          echo "AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}"
          echo "AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}"
          echo "AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}"

      # Fetch secrets from Azure Key Vault (si es necesario)
      - name: Fetch secrets from Azure Key Vault
        run: |
          SECRET_GH_TOKEN=$(az keyvault secret show --name GHTOKEN --vault-name portafoliowebv2-keyvault --query value -o tsv)
          echo "GHTOKEN=$SECRET_GH_TOKEN" >> $GITHUB_ENV

      - name: Run Semantic Release
        env:
          GH_TOKEN: ${{ secrets.GHTOKEN }}  # Este es el token necesario para Semantic Release
        run: |
          pnpm exec semantic-release
